[2025-01-03T09:37:42.104Z] üîÑ –ù–∞—á–∞–ª–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ API –∫–ª—é—á–∞...
[2025-01-03T09:37:42.105Z] üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞: AIzaSy...dX3Y
[2025-01-03T09:37:42.966Z] ‚úÖ API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω
[2025-01-03T09:37:42.967Z] üìù –ü–æ–ª—É—á–µ–Ω—ã —Ç–∏–ø—ã –∞–Ω–∞–ª–∏–∑–∞:
[2025-01-03T09:37:42.967Z] üîß –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Ä–æ–≥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: 70 (autoApply –≤–∫–ª—é—á–µ–Ω)
[2025-01-03T09:37:42.967Z] üìÇ –£–∫–∞–∑–∞–Ω –ø—É—Ç—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: ./tests
[2025-01-03T09:37:42.970Z] üìÅ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: 1
[2025-01-03T09:37:42.970Z] üìÑ –ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞ (1/1): tests/test-api.js
[2025-01-03T09:37:42.971Z] üìã –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã –∞–Ω–∞–ª–∏–∑–∞:
[2025-01-03T09:37:42.971Z] üîç –†–∞–∑–±–æ—Ä —Ç–∏–ø–∞ basic:
[2025-01-03T09:37:42.972Z] üîç –†–∞–∑–±–æ—Ä —Ç–∏–ø–∞ security:
[2025-01-03T09:37:42.972Z] üîç –†–∞–∑–±–æ—Ä —Ç–∏–ø–∞ performance:
[2025-01-03T09:37:42.972Z] üîç –†–∞–∑–±–æ—Ä —Ç–∏–ø–∞ syntax:
[2025-01-03T09:37:42.972Z] 
üîß –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞: tests/test-api.js
[2025-01-03T09:37:42.972Z]    –ü—Ä–∏–º–µ–Ω—è–µ–º prettier-vscode...
[2025-01-03T09:37:43.145Z]    ‚úÖ prettier-vscode completed
[2025-01-03T09:37:43.145Z]    –ü—Ä–∏–º–µ–Ω—è–µ–º eslint...
[2025-01-03T09:37:43.355Z]    ‚úÖ eslint completed
[2025-01-03T09:37:43.355Z] 
üìä –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–∞ --basic
[2025-01-03T09:37:43.356Z] üîß –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä—ã –¥–ª—è --basic...
[2025-01-03T09:37:43.356Z]    Running prettier-vscode...
[2025-01-03T09:37:43.529Z]    ‚úÖ prettier-vscode completed
[2025-01-03T09:37:43.530Z]    Running eslint...
[2025-01-03T09:37:43.740Z]    ‚úÖ eslint completed
[2025-01-03T09:37:50.402Z] –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:
          - Confidence: 80
          - Impact: 70
          - Priority: 75
          
[2025-01-03T09:37:50.402Z] 
[--basic] –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ confidence: 80, –ø–æ—Ä–æ–≥ fix: 70
[2025-01-03T09:37:50.402Z] 
[--basic] autoApply: true, confidence: 80, fix: 70
[2025-01-03T09:37:50.402Z] üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ç–∏–ø–∞: --basic
[2025-01-03T09:37:50.403Z] 
[--basic] –ù–∞—á–∞–ª–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...
[2025-01-03T09:37:50.403Z] üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞: AIzaSy...dX3Y
[2025-01-03T09:37:51.287Z] ‚úÖ API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω
[2025-01-03T09:37:51.288Z] –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç—Ä–∏–∫:
            - Confidence: 80
            - Impact: 70
            - Priority: 75
            - –ü–æ—Ä–æ–≥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: 70
            - AutoApply: true
            
[2025-01-03T09:37:57.840Z] ‚úÖ –ü—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è
[2025-01-03T09:37:57.840Z] [--basic] –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã (—Ñ–∏–∫—Å >= –ø–æ—Ä–æ–≥–∞).
[2025-01-03T09:37:57.840Z] 
üìä –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–∞ --security
[2025-01-03T09:38:04.123Z] –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:
          - Confidence: 90
          - Impact: 80
          - Priority: 85
          
[2025-01-03T09:38:04.123Z] 
[--security] –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ confidence: 90, –ø–æ—Ä–æ–≥ fix: 70
[2025-01-03T09:38:04.123Z] 
[--security] autoApply: true, confidence: 90, fix: 70
[2025-01-03T09:38:04.123Z] üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ç–∏–ø–∞: --security
[2025-01-03T09:38:04.123Z] 
[--security] –ù–∞—á–∞–ª–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...
[2025-01-03T09:38:04.123Z] üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞: AIzaSy...dX3Y
[2025-01-03T09:38:04.934Z] ‚úÖ API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω
[2025-01-03T09:38:04.934Z] –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç—Ä–∏–∫:
            - Confidence: 90
            - Impact: 80
            - Priority: 85
            - –ü–æ—Ä–æ–≥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: 70
            - AutoApply: true
            
[2025-01-03T09:38:09.609Z] ‚úÖ –ü—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è
[2025-01-03T09:38:09.610Z] [--security] –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã (—Ñ–∏–∫—Å >= –ø–æ—Ä–æ–≥–∞).
[2025-01-03T09:38:09.610Z] 
üìä –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–∞ --performance
[2025-01-03T09:38:22.801Z] –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:
          - Confidence: 85
          - Impact: 75
          - Priority: 80
          
[2025-01-03T09:38:22.802Z] 
[--performance] –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ confidence: 85, –ø–æ—Ä–æ–≥ fix: 70
[2025-01-03T09:38:22.802Z] 
[--performance] autoApply: true, confidence: 85, fix: 70
[2025-01-03T09:38:22.802Z] üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ç–∏–ø–∞: --performance
[2025-01-03T09:38:22.802Z] 
[--performance] –ù–∞—á–∞–ª–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...
[2025-01-03T09:38:22.802Z] üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞: AIzaSy...dX3Y
[2025-01-03T09:38:23.606Z] ‚úÖ API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω
[2025-01-03T09:38:23.606Z] –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç—Ä–∏–∫:
            - Confidence: 85
            - Impact: 75
            - Priority: 80
            - –ü–æ—Ä–æ–≥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: 70
            - AutoApply: true
            
[2025-01-03T09:38:29.305Z] ‚úÖ –ü—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è
[2025-01-03T09:38:29.305Z] [--performance] –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã (—Ñ–∏–∫—Å >= –ø–æ—Ä–æ–≥–∞).
[2025-01-03T09:38:29.306Z] 
üìä –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–∞ --syntax
[2025-01-03T09:38:29.306Z] üîß –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä—ã –¥–ª—è --syntax...
[2025-01-03T09:38:29.306Z]    Running eslint...
[2025-01-03T09:38:29.519Z]    ‚úÖ eslint completed
[2025-01-03T09:38:33.416Z] –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:
          - Confidence: 95
          - Impact: 60
          - Priority: 70
          
[2025-01-03T09:38:33.416Z] 
[--syntax] –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ confidence: 95, –ø–æ—Ä–æ–≥ fix: 70
[2025-01-03T09:38:33.416Z] 
[--syntax] autoApply: true, confidence: 95, fix: 70
[2025-01-03T09:38:33.416Z] üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ç–∏–ø–∞: --syntax
[2025-01-03T09:38:33.417Z] 
[--syntax] –ù–∞—á–∞–ª–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...
[2025-01-03T09:38:33.417Z] üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞: AIzaSy...dX3Y
[2025-01-03T09:38:34.218Z] ‚úÖ API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω
[2025-01-03T09:38:34.218Z] –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç—Ä–∏–∫:
            - Confidence: 95
            - Impact: 60
            - Priority: 70
            - –ü–æ—Ä–æ–≥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: 70
            - AutoApply: true
            
[2025-01-03T09:38:37.850Z] ‚úÖ –ü—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è
[2025-01-03T09:38:37.850Z] [--syntax] –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã (—Ñ–∏–∫—Å >= –ø–æ—Ä–æ–≥–∞).
[2025-01-03T09:38:37.850Z] 
üìä –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç –ø–æ —Ñ–∞–π–ª—É:
[2025-01-03T09:38:37.851Z] [
  {
    "type": "--basic",
    "analysis": "```json\n{\n  \"codeQualityScore\": 80,\n  \"specificIssuesFound\": [\n    {\n      \"issue\": \"The `config.validate()` method should be called before using the `config` object to ensure that the configuration is valid.\",\n      \"exampleFix\": \"```javascript\\nif (!config.validate()) {\\n  throw new Error('Invalid configuration');\\n}\\n```\"\n    },\n    {\n      \"issue\": \"The `console.log` statements should be replaced with a more structured logging mechanism, such as a logging library.\",\n      \"exampleFix\": \"```javascript\\nconst logger = require('./logger');\\n\\nlogger.info('–ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞:', config.apiKey ? '***' + '*****'.slice(-5) : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');\\n```\"\n    },\n    {\n      \"issue\": \"The `model.generateContent()` method should be called with the `content` parameter instead of the `text` parameter.\",\n      \"exampleFix\": \"```javascript\\nconst result = await model.generateContent({ content: '—Ç–µ—Å—Ç' });\\n```\"\n    }\n  ],\n  \"concreteImprovementSuggestions\": [\n    {\n      \"suggestion\": \"Use a more structured logging mechanism, such as a logging library.\",\n      \"exampleFix\": \"```javascript\\nconst logger = require('./logger');\\n\\nlogger.info('–ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞:', config.apiKey ? '***' + '*****'.slice(-5) : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');\\n```\"\n    },\n    {\n      \"suggestion\": \"Use the `content` parameter instead of the `text` parameter when calling the `model.generateContent()` method.\",\n      \"exampleFix\": \"```javascript\\nconst result = await model.generateContent({ content: '—Ç–µ—Å—Ç' });\\n```\"\n    }\n  ]\n}\n```",
    "confidence": 80,
    "impact": 70,
    "priority": 75,
    "appliedFixes": [],
    "specificChecks": {},
    "formattingApplied": true,
    "fixesApplied": 0
  },
  {
    "type": "--security",
    "analysis": "```json\n{\n  \"codeQualityScore\": 70,\n  \"specificIssuesFound\": [\n    {\n      \"issue\": \"Hard-coded API key\",\n      \"description\": \"The API key is hard-coded in the code, which is not secure and can lead to unauthorized access to the API.\"\n    },\n    {\n      \"issue\": \"Lack of input validation\",\n      \"description\": \"The code does not validate the input before sending it to the API, which can lead to unexpected behavior or even security vulnerabilities.\"\n    }\n  ],\n  \"concreteImprovementSuggestions\": [\n    {\n      \"suggestion\": \"Use environment variables to store the API key\",\n      \"description\": \"Instead of hard-coding the API key in the code, it should be stored in an environment variable and loaded at runtime. This makes it easier to manage and secure the API key.\"\n    },\n    {\n      \"suggestion\": \"Implement input validation\",\n      \"description\": \"The code should validate the input before sending it to the API. This can be done by using a library or by writing custom validation logic.\"\n    }\n  ],\n  \"codeExamplesForFixes\": [\n    {\n      \"code\": `\n      // Get the API key from the environment variable\n      const apiKey = process.env.API_KEY;\n      \n      // Create the GoogleGenerativeAI client\n      const genAI = new GoogleGenerativeAI(apiKey);\n      `,\n      \"description\": \"This code shows how to get the API key from the environment variable and use it to create the GoogleGenerativeAI client.\"\n    },\n    {\n      \"code\": `\n      // Validate the input\n      if (!input) {\n        throw new Error(\"Input cannot be empty\");\n      }\n      \n      // Send the input to the API\n      const result = await model.generateContent(input);\n      `,\n      \"description\": \"This code shows how to validate the input before sending it to the API.\"\n    }\n  ]\n}\n```",
    "confidence": 90,
    "impact": 80,
    "priority": 85,
    "appliedFixes": [],
    "specificChecks": {
      "sqlInjection": [],
      "xss": [],
      "unsafeEval": []
    },
    "formattingApplied": true,
    "fixesApplied": 0
  },
  {
    "type": "--performance",
    "analysis": "```json\n{\n  \"codeQualityScore\": 75,\n  \"specificIssuesFound\": [\n    {\n      \"issue\": \"The function `testGeminiAPI` is too long and complex, making it difficult to read and maintain.\",\n      \"recommendation\": \"Refactor the function into smaller, more manageable functions.\"\n    },\n    {\n      \"issue\": \"The function `testGeminiAPI` does not handle errors gracefully.\",\n      \"recommendation\": \"Add error handling to the function to ensure that it does not crash if an error occurs.\"\n    },\n    {\n      \"issue\": \"The function `testGeminiAPI` does not use async/await to make asynchronous calls.\",\n      \"recommendation\": \"Use async/await to make asynchronous calls to improve the performance of the function.\"\n    }\n  ],\n  \"concreteImprovementSuggestions\": [\n    {\n      \"suggestion\": \"Refactor the function `testGeminiAPI` into smaller, more manageable functions.\",\n      \"codeExample\": `\n        async function testGeminiAPI() {\n          try {\n            const config = require(\"../src/config/gemini.config\");\n            config.validate();\n        \n            console.log(\n              \"–ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞:\",\n              config.apiKey ? \"***\" + \"*****\".slice(-5) : \"–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\",\n            );\n        \n            const genAI = new GoogleGenerativeAI(config.apiKey);\n            const model = genAI.getGenerativeModel({ model: config.modelName });\n        \n            const result = await model.generateContent(\"—Ç–µ—Å—Ç\");\n            const response = await result.response;\n        \n            console.log(\"–û—Ç–≤–µ—Ç API –ø–æ–ª—É—á–µ–Ω:\", response ? \"—É—Å–ø–µ—à–Ω–æ\" : \"–æ—à–∏–±–∫–∞\");\n            return true;\n          } catch (error) {\n            console.error(\"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:\", error.message);\n            if (config.debug) {\n              console.error(\"–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:\", error);\n            }\n            return false;\n          }\n        }\n        `\n    },\n    {\n      \"suggestion\": \"Add error handling to the function `testGeminiAPI` to ensure that it does not crash if an error occurs.\",\n      \"codeExample\": `\n        async function testGeminiAPI() {\n          try {\n            const config = require(\"../src/config/gemini.config\");\n            config.validate();\n        \n            console.log(\n              \"–ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞:\",\n              config.apiKey ? \"***\" + \"*****\".slice(-5) : \"–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\",\n            );\n        \n            const genAI = new GoogleGenerativeAI(config.apiKey);\n            const model = genAI.getGenerativeModel({ model: config.modelName });\n        \n            const result = await model.generateContent(\"—Ç–µ—Å—Ç\");\n            const response = await result.response;\n        \n            console.log(\"–û—Ç–≤–µ—Ç API –ø–æ–ª—É—á–µ–Ω:\", response ? \"—É—Å–ø–µ—à–Ω–æ\" : \"–æ—à–∏–±–∫–∞\");\n            return true;\n          } catch (error) {\n            console.error(\"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:\", error.message);\n            if (config.debug) {\n              console.error(\"–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:\", error);\n            }\n            return false;\n          }\n        }\n        `\n    },\n    {\n      \"suggestion\": \"Use async/await to make asynchronous calls to improve the performance of the function `testGeminiAPI`.\",\n      \"codeExample\": `\n        async function testGeminiAPI() {\n          try {\n            const config = require(\"../src/config/gemini.config\");\n            config.validate();\n        \n            console.log(\n              \"–ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞:\",\n              config.apiKey ? \"***\" + \"*****\".slice(-5) : \"–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\",\n            );\n        \n            const genAI = new GoogleGenerativeAI(config.apiKey);\n            const model = genAI.getGenerativeModel({ model: config.modelName });\n        \n            const result = await model.generateContent(\"—Ç–µ—Å—Ç\");\n            const response = await result.response;\n        \n            console.log(\"–û—Ç–≤–µ—Ç API –ø–æ–ª—É—á–µ–Ω:\", response ? \"—É—Å–ø–µ—à–Ω–æ\" : \"–æ—à–∏–±–∫–∞\");\n            return true;\n          } catch (error) {\n            console.error(\"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:\", error.message);\n            if (config.debug) {\n              console.error(\"–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:\", error);\n            }\n            return false;\n          }\n        }\n        `\n    }\n  ]\n}\n```",
    "confidence": 85,
    "impact": 75,
    "priority": 80,
    "appliedFixes": [],
    "specificChecks": {
      "complexity": [
        "–ù–∞–π–¥–µ–Ω–æ 1 —Ñ—É–Ω–∫—Ü–∏–π."
      ],
      "memoryUsage": []
    },
    "formattingApplied": true,
    "fixesApplied": 0
  },
  {
    "type": "--syntax",
    "analysis": "```json\n{\n  \"codeQualityScore\": 80,\n  \"specificIssuesFound\": [\n    {\n      \"issue\": \"Missing semicolon after the `console.log` statement.\",\n      \"line\": 10\n    },\n    {\n      \"issue\": \"Missing curly braces around the `if` statement.\",\n      \"line\": 22\n    }\n  ],\n  \"concreteImprovementSuggestions\": [\n    {\n      \"suggestion\": \"Add a semicolon after the `console.log` statement.\",\n      \"line\": 10,\n      \"codeExample\": `\n        console.log(\n          \"–ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞:\",\n          config.apiKey ? \"***\" + \"*****\".slice(-5) : \"–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\"\n        );\n      `\n    },\n    {\n      \"suggestion\": \"Add curly braces around the `if` statement.\",\n      \"line\": 22,\n      \"codeExample\": `\n        if (config.debug) {\n          console.error(\"–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:\", error);\n        }\n      `\n    }\n  ]\n}\n```",
    "confidence": 95,
    "impact": 60,
    "priority": 70,
    "appliedFixes": [],
    "specificChecks": {
      "syntax": [],
      "style": [
        {
          "type": "style",
          "message": "Trailing whitespace found"
        },
        {
          "type": "style",
          "message": "Missing newline at end of file"
        },
        {
          "type": "style",
          "message": "Trailing comma style violation"
        }
      ]
    },
    "formattingApplied": true,
    "fixesApplied": 0
  }
]
[2025-01-03T09:38:37.851Z] üîé –ó–∞–≤–µ—Ä—à—ë–Ω –∞–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞:
[2025-01-03T09:38:37.851Z] 
‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω
[2025-01-03T09:38:37.852Z] –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç: {
  "timestamp": "2025-01-03T09:38:37.852Z",
  "errors": [],
  "fixes": [],
  "unresolvedErrors": 0,
  "reasons": []
}
[2025-01-03T09:46:24.411Z] üîÑ –ù–∞—á–∞–ª–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ API –∫–ª—é—á–∞...
[2025-01-03T09:46:24.411Z] üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞: AIzaSy...dX3Y
[2025-01-03T09:46:25.296Z] ‚úÖ API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω
[2025-01-03T09:46:25.296Z] üìù –ü–æ–ª—É—á–µ–Ω—ã —Ç–∏–ø—ã –∞–Ω–∞–ª–∏–∑–∞:
[2025-01-03T09:46:25.297Z] üîß –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Ä–æ–≥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: 70 (autoApply –≤–∫–ª—é—á–µ–Ω)
[2025-01-03T09:46:25.297Z] üìÇ –£–∫–∞–∑–∞–Ω –ø—É—Ç—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: ./tests
[2025-01-03T09:46:25.300Z] üìÅ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: 1
[2025-01-03T09:46:25.300Z] üìÑ –ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞ (1/1): tests/test-api.js
[2025-01-03T09:46:25.302Z] üìã –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã –∞–Ω–∞–ª–∏–∑–∞:
[2025-01-03T09:46:25.302Z] üîç –†–∞–∑–±–æ—Ä —Ç–∏–ø–∞ basic:
[2025-01-03T09:46:25.302Z] üîç –†–∞–∑–±–æ—Ä —Ç–∏–ø–∞ security:
[2025-01-03T09:46:25.303Z] üîç –†–∞–∑–±–æ—Ä —Ç–∏–ø–∞ performance:
[2025-01-03T09:46:25.303Z] üîç –†–∞–∑–±–æ—Ä —Ç–∏–ø–∞ syntax:
[2025-01-03T09:46:25.303Z] 
üîß –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞: tests/test-api.js
[2025-01-03T09:46:25.304Z]    –ü—Ä–∏–º–µ–Ω—è–µ–º prettier-vscode...
[2025-01-03T09:46:25.475Z]    ‚úÖ prettier-vscode completed
[2025-01-03T09:46:25.476Z]    –ü—Ä–∏–º–µ–Ω—è–µ–º eslint...
[2025-01-03T09:46:25.691Z]    ‚úÖ eslint completed
[2025-01-03T09:46:25.691Z] 
üìä –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–∞ --basic
[2025-01-03T09:46:25.692Z] üîß –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä—ã –¥–ª—è --basic...
[2025-01-03T09:46:25.692Z]    Running prettier-vscode...
[2025-01-03T09:46:25.858Z]    ‚úÖ prettier-vscode completed
[2025-01-03T09:46:25.859Z]    Running eslint...
[2025-01-03T09:46:26.073Z]    ‚úÖ eslint completed
[2025-01-03T09:46:33.381Z] –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:
          - Confidence: 80
          - Impact: 70
          - Priority: 75
          
[2025-01-03T09:46:33.381Z] 
[--basic] –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ confidence: 80, –ø–æ—Ä–æ–≥ fix: 70
[2025-01-03T09:46:33.382Z] 
[--basic] autoApply: true, confidence: 80, fix: 70
[2025-01-03T09:46:33.382Z] üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ç–∏–ø–∞: --basic
[2025-01-03T09:46:33.382Z] 
[--basic] –ù–∞—á–∞–ª–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...
[2025-01-03T09:46:33.382Z] üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞: AIzaSy...dX3Y
[2025-01-03T09:46:34.193Z] ‚úÖ API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω
[2025-01-03T09:46:34.193Z] –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç—Ä–∏–∫:
            - Confidence: 80
            - Impact: 70
            - Priority: 75
            - –ü–æ—Ä–æ–≥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: 70
            - AutoApply: true
            
[2025-01-03T09:46:39.952Z] ‚úÖ –ü—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è
[2025-01-03T09:46:39.953Z] [--basic] –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã (—Ñ–∏–∫—Å >= –ø–æ—Ä–æ–≥–∞).
[2025-01-03T09:46:39.953Z] 
üìä –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–∞ --security
[2025-01-03T09:46:44.133Z] –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:
          - Confidence: 90
          - Impact: 80
          - Priority: 85
          
[2025-01-03T09:46:44.133Z] 
[--security] –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ confidence: 90, –ø–æ—Ä–æ–≥ fix: 70
[2025-01-03T09:46:44.133Z] 
[--security] autoApply: true, confidence: 90, fix: 70
[2025-01-03T09:46:44.133Z] üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ç–∏–ø–∞: --security
[2025-01-03T09:46:44.133Z] 
[--security] –ù–∞—á–∞–ª–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...
[2025-01-03T09:46:44.134Z] üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞: AIzaSy...dX3Y
[2025-01-03T09:46:44.945Z] ‚úÖ API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω
[2025-01-03T09:46:44.946Z] –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç—Ä–∏–∫:
            - Confidence: 90
            - Impact: 80
            - Priority: 85
            - –ü–æ—Ä–æ–≥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: 70
            - AutoApply: true
            
[2025-01-03T09:46:49.861Z] ‚úÖ –ü—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è
[2025-01-03T09:46:49.862Z] [--security] –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã (—Ñ–∏–∫—Å >= –ø–æ—Ä–æ–≥–∞).
[2025-01-03T09:46:49.862Z] 
üìä –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–∞ --performance
[2025-01-03T09:46:57.483Z] –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:
          - Confidence: 85
          - Impact: 75
          - Priority: 80
          
[2025-01-03T09:46:57.483Z] 
[--performance] –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ confidence: 85, –ø–æ—Ä–æ–≥ fix: 70
[2025-01-03T09:46:57.483Z] 
[--performance] autoApply: true, confidence: 85, fix: 70
[2025-01-03T09:46:57.483Z] üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ç–∏–ø–∞: --performance
[2025-01-03T09:46:57.483Z] 
[--performance] –ù–∞—á–∞–ª–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...
[2025-01-03T09:46:57.483Z] üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞: AIzaSy...dX3Y
[2025-01-03T09:46:58.286Z] ‚úÖ API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω
[2025-01-03T09:46:58.286Z] –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç—Ä–∏–∫:
            - Confidence: 85
            - Impact: 75
            - Priority: 80
            - –ü–æ—Ä–æ–≥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: 70
            - AutoApply: true
            
[2025-01-03T09:47:04.973Z] ‚úÖ –ü—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è
[2025-01-03T09:47:04.973Z] [--performance] –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã (—Ñ–∏–∫—Å >= –ø–æ—Ä–æ–≥–∞).
[2025-01-03T09:47:04.974Z] 
üìä –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–∞ --syntax
[2025-01-03T09:47:04.974Z] üîß –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä—ã –¥–ª—è --syntax...
[2025-01-03T09:47:04.975Z]    Running eslint...
[2025-01-03T09:47:05.192Z]    ‚úÖ eslint completed
[2025-01-03T09:47:09.283Z] –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:
          - Confidence: 95
          - Impact: 60
          - Priority: 70
          
[2025-01-03T09:47:09.283Z] 
[--syntax] –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ confidence: 95, –ø–æ—Ä–æ–≥ fix: 70
[2025-01-03T09:47:09.283Z] 
[--syntax] autoApply: true, confidence: 95, fix: 70
[2025-01-03T09:47:09.284Z] üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ç–∏–ø–∞: --syntax
[2025-01-03T09:47:09.284Z] 
[--syntax] –ù–∞—á–∞–ª–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...
[2025-01-03T09:47:09.284Z] üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞: AIzaSy...dX3Y
[2025-01-03T09:47:10.092Z] ‚úÖ API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω
[2025-01-03T09:47:10.093Z] –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç—Ä–∏–∫:
            - Confidence: 95
            - Impact: 60
            - Priority: 70
            - –ü–æ—Ä–æ–≥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: 70
            - AutoApply: true
            
[2025-01-03T09:47:11.747Z] ‚úÖ –ü—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è
[2025-01-03T09:47:11.748Z] [--syntax] –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã (—Ñ–∏–∫—Å >= –ø–æ—Ä–æ–≥–∞).
[2025-01-03T09:47:11.748Z] 
üìä –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç –ø–æ —Ñ–∞–π–ª—É:
[2025-01-03T09:47:11.748Z] [
  {
    "type": "--basic",
    "analysis": "```json\n{\n  \"codeQualityScore\": 70,\n  \"specificIssuesFound\": [\n    {\n      \"issue\": \"The code is not linted.\",\n      \"suggestion\": \"Use a linter like ESLint to check for code style and potential errors.\"\n    },\n    {\n      \"issue\": \"The code is not formatted.\",\n      \"suggestion\": \"Use a formatter like Prettier to format the code.\"\n    },\n    {\n      \"issue\": \"The code is not documented.\",\n      \"suggestion\": \"Add comments to explain the purpose and functionality of the code.\"\n    },\n    {\n      \"issue\": \"The code does not handle errors gracefully.\",\n      \"suggestion\": \"Add error handling to the code to prevent it from crashing.\"\n    }\n  ],\n  \"concreteImprovementSuggestions\": [\n    {\n      \"suggestion\": \"Add a linter to the project.\",\n      \"codeExample\": \"npm install --save-dev eslint\"\n    },\n    {\n      \"suggestion\": \"Add a formatter to the project.\",\n      \"codeExample\": \"npm install --save-dev prettier\"\n    },\n    {\n      \"suggestion\": \"Add comments to the code.\",\n      \"codeExample\": \"// This function generates content using the Gemini API.\"\n    },\n    {\n      \"suggestion\": \"Add error handling to the code.\",\n      \"codeExample\": \"try { ... } catch (error) { ... }\"\n    }\n  ],\n  \"codeExamplesForFixes\": [\n    {\n      \"issue\": \"The code is not linted.\",\n      \"fix\": \"eslint --fix .\"\n    },\n    {\n      \"issue\": \"The code is not formatted.\",\n      \"fix\": \"prettier --write .\"\n    },\n    {\n      \"issue\": \"The code is not documented.\",\n      \"fix\": \"// This function generates content using the Gemini API.\"\n    },\n    {\n      \"issue\": \"The code does not handle errors gracefully.\",\n      \"fix\": \"try { ... } catch (error) { ... }\"\n    }\n  ]\n}\n```",
    "confidence": 80,
    "impact": 70,
    "priority": 75,
    "appliedFixes": [],
    "specificChecks": {},
    "formattingApplied": true,
    "fixesApplied": 0
  },
  {
    "type": "--security",
    "analysis": "```json\n{\n  \"codeQualityScore\": 70,\n  \"specificIssuesFound\": [\n    {\n      \"issue\": \"API key is not masked properly\",\n      \"description\": \"The API key is partially masked, but it is still possible to determine the full value. This could be a security risk if the key is leaked.\",\n      \"fix\": \"Mask the API key more effectively, for example by using a regular expression to replace all but the last few characters with asterisks.\"\n    },\n    {\n      \"issue\": \"Debug mode is enabled in production code\",\n      \"description\": \"Debug mode should not be enabled in production code, as it can expose sensitive information to attackers.\",\n      \"fix\": \"Remove the `debug` flag from the configuration.\"\n    }\n  ],\n  \"concreteImprovementSuggestions\": [\n    {\n      \"suggestion\": \"Use a more secure method of masking the API key\",\n      \"example\": \"```javascript\\nconst apiKey = '************************************************';\\n```\"\n    },\n    {\n      \"suggestion\": \"Disable debug mode in production code\",\n      \"example\": \"```javascript\\nconst debug = false;\\n```\"\n    }\n  ]\n}\n```",
    "confidence": 90,
    "impact": 80,
    "priority": 85,
    "appliedFixes": [],
    "specificChecks": {
      "sqlInjection": [],
      "xss": [],
      "unsafeEval": []
    },
    "formattingApplied": true,
    "fixesApplied": 0
  },
  {
    "type": "--performance",
    "analysis": "```json\n{\n  \"codeQualityScore\": 70,\n  \"specificIssuesFound\": [\n    {\n      \"issue\": \"Hard-coded configuration\",\n      \"description\": \"The configuration for the Google Generative AI API is hard-coded in the `gemini.config.js` file, which can make it difficult to manage and maintain.\"\n    },\n    {\n      \"issue\": \"Lack of error handling\",\n      \"description\": \"The `testGeminiAPI` function does not handle errors that may occur when making requests to the API.\"\n    },\n    {\n      \"issue\": \"Unnecessary logging\",\n      \"description\": \"The function logs the API key even if it is not present, which can be unnecessary and potentially expose sensitive information.\"\n    }\n  ],\n  \"concreteImprovementSuggestions\": [\n    {\n      \"suggestion\": \"Move configuration to environment variables\",\n      \"description\": \"Consider moving the configuration for the API to environment variables, which would make it easier to manage and maintain.\"\n    },\n    {\n      \"suggestion\": \"Add error handling\",\n      \"description\": \"Add error handling to the `testGeminiAPI` function to catch and handle errors that may occur when making requests to the API.\"\n    },\n    {\n      \"suggestion\": \"Use conditional logging\",\n      \"description\": \"Use conditional logging to only log the API key if it is present, which would reduce unnecessary logging and potential exposure of sensitive information.\"\n    }\n  ],\n  \"codeExamplesForFixes\": [\n    {\n      \"before\": `\nconst config = require(\"../src/config/gemini.config\");\n`,\n      \"after\": `\nconst config = require(\"dotenv\").config();\n`\n    },\n    {\n      \"before\": `\nasync function testGeminiAPI() {\n  try {\n    config.validate();\n`,\n      \"after\": `\nasync function testGeminiAPI() {\n  try {\n    config.validate();\n    const genAI = new GoogleGenerativeAI(config.apiKey);\n`\n    },\n    {\n      \"before\": `\nconsole.log(\n      \"–ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞:\",\n      config.apiKey ? \"***\" + \"*****\".slice(-5) : \"–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\",\n    );\n`,\n      \"after\": `\nif (config.apiKey) {\n  console.log(\"–ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞: ***\" + \"*****\".slice(-5));\n}\n`\n    }\n  ]\n}\n```",
    "confidence": 85,
    "impact": 75,
    "priority": 80,
    "appliedFixes": [],
    "specificChecks": {
      "complexity": [
        "–ù–∞–π–¥–µ–Ω–æ 1 —Ñ—É–Ω–∫—Ü–∏–π."
      ],
      "memoryUsage": []
    },
    "formattingApplied": true,
    "fixesApplied": 0
  },
  {
    "type": "--syntax",
    "analysis": "```json\n{\n  \"codeQualityScore\": 80,\n  \"specificIssuesFound\": [\n    {\n      \"issue\": \"Using a hardcoded string in the console.log() statement.\",\n      \"location\": \"Line 10\",\n      \"severity\": \"Low\"\n    },\n    {\n      \"issue\": \"Using a ternary operator in the console.log() statement.\",\n      \"location\": \"Line 16\",\n      \"severity\": \"Low\"\n    }\n  ],\n  \"concreteImprovementSuggestions\": [\n    {\n      \"suggestion\": \"Use a string template literal instead of a hardcoded string.\",\n      \"codeExample\": `console.log(\\`–ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞: \\${config.apiKey ? \"***\" + \"*****\".slice(-5) : \"–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\"}\\`);`\n    },\n    {\n      \"suggestion\": \"Use an if-else statement instead of a ternary operator.\",\n      \"codeExample\": `\nif (response) {\n  console.log(\"–û—Ç–≤–µ—Ç API –ø–æ–ª—É—á–µ–Ω: —É—Å–ø–µ—à–Ω–æ\");\n} else {\n  console.log(\"–û—Ç–≤–µ—Ç API –ø–æ–ª—É—á–µ–Ω: –æ—à–∏–±–∫–∞\");\n}\n`\n    }\n  ]\n}\n```",
    "confidence": 95,
    "impact": 60,
    "priority": 70,
    "appliedFixes": [],
    "specificChecks": {
      "syntax": [],
      "style": [
        {
          "type": "style",
          "message": "Trailing whitespace found"
        },
        {
          "type": "style",
          "message": "Missing newline at end of file"
        },
        {
          "type": "style",
          "message": "Trailing comma style violation"
        }
      ]
    },
    "formattingApplied": true,
    "fixesApplied": 0
  }
]
[2025-01-03T09:47:11.748Z] üîé –ó–∞–≤–µ—Ä—à—ë–Ω –∞–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞:
[2025-01-03T09:47:11.748Z] 
‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω
[2025-01-03T09:47:11.749Z] –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç:
{
  "timestamp": "2025-01-03T09:47:11.749Z",
  "errors": [],
  "fixes": [],
  "unresolvedErrors": 0,
  "reasons": []
}
[2025-01-03T09:50:03.231Z] üîÑ –ù–∞—á–∞–ª–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ API –∫–ª—é—á–∞...
[2025-01-03T09:50:03.231Z] üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞: AIzaSy...dX3Y
[2025-01-03T09:50:04.086Z] ‚úÖ API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω
[2025-01-03T09:50:04.086Z] üìù –ü–æ–ª—É—á–µ–Ω—ã —Ç–∏–ø—ã –∞–Ω–∞–ª–∏–∑–∞:
[2025-01-03T09:50:04.086Z] üîß –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Ä–æ–≥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: 70 (autoApply –≤–∫–ª—é—á–µ–Ω)
[2025-01-03T09:50:04.086Z] üìÇ –£–∫–∞–∑–∞–Ω –ø—É—Ç—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: ./tests
[2025-01-03T09:50:04.090Z] üìÅ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: 1
[2025-01-03T09:50:04.090Z] üìÑ –ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞ (1/1): tests/test-api.js
[2025-01-03T09:50:04.091Z] üìã –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã –∞–Ω–∞–ª–∏–∑–∞:
[2025-01-03T09:50:04.092Z] üîç –†–∞–∑–±–æ—Ä —Ç–∏–ø–∞ basic:
[2025-01-03T09:50:04.092Z] üîç –†–∞–∑–±–æ—Ä —Ç–∏–ø–∞ security:
[2025-01-03T09:50:04.092Z] üîç –†–∞–∑–±–æ—Ä —Ç–∏–ø–∞ performance:
[2025-01-03T09:50:04.092Z] üîç –†–∞–∑–±–æ—Ä —Ç–∏–ø–∞ syntax:
[2025-01-03T09:50:04.092Z] 
üîß –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞: tests/test-api.js
[2025-01-03T09:50:04.093Z]    –ü—Ä–∏–º–µ–Ω—è–µ–º prettier-vscode...
[2025-01-03T09:50:04.264Z]    ‚úÖ prettier-vscode completed
[2025-01-03T09:50:04.264Z]    –ü—Ä–∏–º–µ–Ω—è–µ–º eslint...
[2025-01-03T09:50:04.481Z]    ‚úÖ eslint completed
[2025-01-03T09:50:04.481Z] 
üìä –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–∞ --basic
[2025-01-03T09:50:04.481Z] üîß –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä—ã –¥–ª—è --basic...
[2025-01-03T09:50:04.482Z]    Running prettier-vscode...
[2025-01-03T09:50:04.653Z]    ‚úÖ prettier-vscode completed
[2025-01-03T09:50:04.653Z]    Running eslint...
[2025-01-03T09:50:04.868Z]    ‚úÖ eslint completed
[2025-01-03T09:50:10.160Z] –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:
          - Confidence: 80
          - Impact: 70
          - Priority: 75
          
[2025-01-03T09:50:10.161Z] 
[--basic] –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ confidence: 80, –ø–æ—Ä–æ–≥ fix: 70
[2025-01-03T09:50:10.161Z] 
[--basic] autoApply: true, confidence: 80, fix: 70
[2025-01-03T09:50:10.161Z] üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ç–∏–ø–∞: --basic
[2025-01-03T09:50:10.161Z] 
[--basic] –ù–∞—á–∞–ª–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...
[2025-01-03T09:50:10.161Z] üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞: AIzaSy...dX3Y
[2025-01-03T09:50:10.970Z] ‚úÖ API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω
[2025-01-03T09:50:10.970Z] –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç—Ä–∏–∫:
            - Confidence: 80
            - Impact: 70
            - Priority: 75
            - –ü–æ—Ä–æ–≥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: 70
            - AutoApply: true
            
[2025-01-03T09:50:17.186Z] ‚úÖ –ü—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è
[2025-01-03T09:50:17.186Z] [--basic] –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã (—Ñ–∏–∫—Å >= –ø–æ—Ä–æ–≥–∞).
[2025-01-03T09:50:17.187Z] 
üìä –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–∞ --security
[2025-01-03T09:50:23.576Z] –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:
          - Confidence: 90
          - Impact: 80
          - Priority: 85
          
[2025-01-03T09:50:23.576Z] 
[--security] –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ confidence: 90, –ø–æ—Ä–æ–≥ fix: 70
[2025-01-03T09:50:23.576Z] 
[--security] autoApply: true, confidence: 90, fix: 70
[2025-01-03T09:50:23.576Z] üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ç–∏–ø–∞: --security
[2025-01-03T09:50:23.577Z] 
[--security] –ù–∞—á–∞–ª–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...
[2025-01-03T09:50:23.577Z] üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞: AIzaSy...dX3Y
[2025-01-03T09:50:24.386Z] ‚úÖ API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω
[2025-01-03T09:50:24.386Z] –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç—Ä–∏–∫:
            - Confidence: 90
            - Impact: 80
            - Priority: 85
            - –ü–æ—Ä–æ–≥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: 70
            - AutoApply: true
            
[2025-01-03T09:50:29.687Z] ‚úÖ –ü—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è
[2025-01-03T09:50:29.688Z] [--security] –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã (—Ñ–∏–∫—Å >= –ø–æ—Ä–æ–≥–∞).
[2025-01-03T09:50:29.688Z] 
üìä –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–∞ --performance
[2025-01-03T09:50:34.440Z] –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:
          - Confidence: 85
          - Impact: 75
          - Priority: 80
          
[2025-01-03T09:50:34.440Z] 
[--performance] –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ confidence: 85, –ø–æ—Ä–æ–≥ fix: 70
[2025-01-03T09:50:34.440Z] 
[--performance] autoApply: true, confidence: 85, fix: 70
[2025-01-03T09:50:34.440Z] üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ç–∏–ø–∞: --performance
[2025-01-03T09:50:34.441Z] 
[--performance] –ù–∞—á–∞–ª–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...
[2025-01-03T09:50:34.441Z] üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞: AIzaSy...dX3Y
[2025-01-03T09:50:35.252Z] ‚úÖ API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω
[2025-01-03T09:50:35.252Z] –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç—Ä–∏–∫:
            - Confidence: 85
            - Impact: 75
            - Priority: 80
            - –ü–æ—Ä–æ–≥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: 70
            - AutoApply: true
            
[2025-01-03T09:50:40.581Z] ‚úÖ –ü—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è
[2025-01-03T09:50:40.581Z] [--performance] –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã (—Ñ–∏–∫—Å >= –ø–æ—Ä–æ–≥–∞).
[2025-01-03T09:50:40.582Z] 
üìä –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–∞ --syntax
[2025-01-03T09:50:40.582Z] üîß –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä—ã –¥–ª—è --syntax...
[2025-01-03T09:50:40.582Z]    Running eslint...
[2025-01-03T09:50:40.796Z]    ‚úÖ eslint completed
[2025-01-03T09:50:46.336Z] –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:
          - Confidence: 95
          - Impact: 60
          - Priority: 70
          
[2025-01-03T09:50:46.337Z] 
[--syntax] –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ confidence: 95, –ø–æ—Ä–æ–≥ fix: 70
[2025-01-03T09:50:46.337Z] 
[--syntax] autoApply: true, confidence: 95, fix: 70
[2025-01-03T09:50:46.337Z] üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ç–∏–ø–∞: --syntax
[2025-01-03T09:50:46.337Z] 
[--syntax] –ù–∞—á–∞–ª–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...
[2025-01-03T09:50:46.337Z] üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞: AIzaSy...dX3Y
[2025-01-03T09:50:47.138Z] ‚úÖ API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω
[2025-01-03T09:50:47.138Z] –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç—Ä–∏–∫:
            - Confidence: 95
            - Impact: 60
            - Priority: 70
            - –ü–æ—Ä–æ–≥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: 70
            - AutoApply: true
            
[2025-01-03T09:50:51.357Z] ‚úÖ –ü—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è
[2025-01-03T09:50:51.357Z] [--syntax] –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã (—Ñ–∏–∫—Å >= –ø–æ—Ä–æ–≥–∞).
[2025-01-03T09:50:51.357Z] 
üìä –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç –ø–æ —Ñ–∞–π–ª—É:
[2025-01-03T09:50:51.357Z] [
  {
    "type": "--basic",
    "analysis": "```json\n{\n  \"codeQualityScore\": 80,\n  \"specificIssuesFound\": [\n    {\n      \"issue\": \"Using console.log for error handling.\",\n      \"line\": 19,\n      \"column\": 5,\n      \"suggestion\": \"Use a proper error handling mechanism like throwing an error or using a try-catch block.\"\n    },\n    {\n      \"issue\": \"Hard-coded string in console.log.\",\n      \"line\": 12,\n      \"column\": 16,\n      \"suggestion\": \"Use a constant or a template literal for the string.\"\n    }\n  ],\n  \"concreteImprovementSuggestions\": [\n    {\n      \"suggestion\": \"Use a try-catch block to handle errors and throw an error if the API key is missing.\",\n      \"codeExample\": `\n        try {\n          config.validate();\n        } catch (error) {\n          throw new Error(\"API key is missing or invalid.\");\n        }\n      `\n    },\n    {\n      \"suggestion\": \"Use a template literal to create the string for console.log.\",\n      \"codeExample\": `\n        console.log(\\`–ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞: \\${config.apiKey ? \"***\" + \"*****\".slice(-5) : \"–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\"}\\`);\n      `\n    }\n  ]\n}\n```",
    "confidence": 80,
    "impact": 70,
    "priority": 75,
    "appliedFixes": [],
    "specificChecks": {},
    "formattingApplied": true,
    "fixesApplied": 0
  },
  {
    "type": "--security",
    "analysis": "```json\n{\n  \"codeQualityScore\": 75,\n  \"specificIssuesFound\": [\n    {\n      \"issue\": \"Hard-coded API key\",\n      \"description\": \"The API key is hard-coded in the config file, which is a security risk.\"\n    }\n  ],\n  \"concreteImprovementSuggestions\": [\n    {\n      \"suggestion\": \"Use environment variables to store the API key\",\n      \"description\": \"This will make it more difficult for attackers to access the API key.\"\n    },\n    {\n      \"suggestion\": \"Use a more secure library for handling API keys\",\n      \"description\": \"This will help to protect the API key from being stolen.\"\n    }\n  ],\n  \"codeExamplesForFixes\": [\n    {\n      \"code\": `\n      const config = require(\"../src/config/gemini.config\");\n\n      async function testGeminiAPI() {\n        try {\n          config.validate();\n\n          console.log(\n            \"–ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞:\",\n            process.env.GEMINI_API_KEY ? \"***\" + \"*****\".slice(-5) : \"–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\",\n          );\n\n          const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);\n          const model = genAI.getGenerativeModel({ model: config.modelName });\n\n          const result = await model.generateContent(\"—Ç–µ—Å—Ç\");\n          const response = await result.response;\n\n          console.log(\"–û—Ç–≤–µ—Ç API –ø–æ–ª—É—á–µ–Ω:\", response ? \"—É—Å–ø–µ—à–Ω–æ\" : \"–æ—à–∏–±–∫–∞\");\n          return true;\n        } catch (error) {\n          console.error(\"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:\", error.message);\n          if (config.debug) {\n            console.error(\"–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:\", error);\n          }\n          return false;\n        }\n      }\n\n      module.exports = { testGeminiAPI };\n      `,\n      \"description\": \"This code uses environment variables to store the API key.\"\n    }\n  ]\n}\n```",
    "confidence": 90,
    "impact": 80,
    "priority": 85,
    "appliedFixes": [],
    "specificChecks": {
      "sqlInjection": [],
      "xss": [],
      "unsafeEval": []
    },
    "formattingApplied": true,
    "fixesApplied": 0
  },
  {
    "type": "--performance",
    "analysis": "```json\n{\n  \"codeQualityScore\": 70,\n  \"specificIssuesFound\": [\n    {\n      \"issue\": \"The code uses synchronous functions (`console.log`) in an asynchronous function (`testGeminiAPI`), which can block the event loop and degrade performance.\",\n      \"example\": \"console.log('–û—Ç–≤–µ—Ç API –ø–æ–ª—É—á–µ–Ω:', response ? '—É—Å–ø–µ—à–Ω–æ' : '–æ—à–∏–±–∫–∞');\",\n      \"fix\": \"Use asynchronous alternatives such as `console.info` or `console.error` instead.\"\n    },\n    {\n      \"issue\": \"The code does not handle errors gracefully. If an error occurs, the function returns `false` without providing any additional information.\",\n      \"example\": \"console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:', error.message);\",\n      \"fix\": \"Add proper error handling to provide more context and enable debugging.\"\n    }\n  ],\n  \"concreteImprovementSuggestions\": [\n    {\n      \"suggestion\": \"Refactor the code to use asynchronous functions and avoid blocking the event loop.\",\n      \"example\": \"console.info('–û—Ç–≤–µ—Ç API –ø–æ–ª—É—á–µ–Ω:', response ? '—É—Å–ø–µ—à–Ω–æ' : '–æ—à–∏–±–∫–∞');\"\n    },\n    {\n      \"suggestion\": \"Implement proper error handling to catch and log errors with more detail.\",\n      \"example\": \"try { ... } catch (error) { console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:', error); }\"\n    }\n  ]\n}\n```",
    "confidence": 85,
    "impact": 75,
    "priority": 80,
    "appliedFixes": [],
    "specificChecks": {
      "complexity": [
        "–ù–∞–π–¥–µ–Ω–æ 1 —Ñ—É–Ω–∫—Ü–∏–π."
      ],
      "memoryUsage": []
    },
    "formattingApplied": true,
    "fixesApplied": 0
  },
  {
    "type": "--syntax",
    "analysis": "```json\n{\n  \"codeQualityScore\": 85,\n  \"specificIssuesFound\": [],\n  \"concreteImprovementSuggestions\": [\n    {\n      \"description\": \"Use descriptive variable names to improve code readability.\",\n      \"example\": \"const { GoogleGenerativeAI } = require('@google/generative-ai');\"\n    },\n    {\n      \"description\": \"Use more descriptive function names to improve code readability.\",\n      \"example\": \"async function testGeminiAPI() {\"\n    },\n    {\n      \"description\": \"Use more descriptive error messages to improve debugging.\",\n      \"example\": \"console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:', error.message);\"\n    },\n    {\n      \"description\": \"Use more descriptive comments to explain the purpose of the code.\",\n      \"example\": \"// Get the generative model from the API.\"\n    }\n  ],\n  \"codeExamplesForFixes\": [\n    {\n      \"before\": \"const { GoogleGenerativeAI } = require('@google/generative-ai');\",\n      \"after\": \"const generativeAI = require('@google/generative-ai');\"\n    },\n    {\n      \"before\": \"async function testGeminiAPI() {\",\n      \"after\": \"async function testGeminiAPI(config) {\"\n    },\n    {\n      \"before\": \"console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:', error.message);\",\n      \"after\": \"console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API: ' + error.message);\"\n    },\n    {\n      \"before\": \"// Get the generative model from the API.\",\n      \"after\": \"// Get the generative model from the API and store it in a variable.\"\n    }\n  ]\n}\n```",
    "confidence": 95,
    "impact": 60,
    "priority": 70,
    "appliedFixes": [],
    "specificChecks": {
      "syntax": [],
      "style": [
        {
          "type": "style",
          "message": "Trailing whitespace found"
        },
        {
          "type": "style",
          "message": "Missing newline at end of file"
        },
        {
          "type": "style",
          "message": "Trailing comma style violation"
        }
      ]
    },
    "formattingApplied": true,
    "fixesApplied": 0
  }
]
[2025-01-03T09:50:51.358Z] üîé –ó–∞–≤–µ—Ä—à—ë–Ω –∞–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞:
[2025-01-03T09:50:51.358Z] 
‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω
[2025-01-03T09:50:51.358Z] –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç:
{
  "timestamp": "2025-01-03T09:50:51.358Z",
  "errors": [],
  "fixes": [],
  "unresolvedErrors": 0,
  "reasons": []
}
