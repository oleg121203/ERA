[2025-01-03T09:21:44.687Z] üîÑ –ù–∞—á–∞–ª–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ API –∫–ª—é—á–∞...
[2025-01-03T09:21:44.687Z] üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞: AIzaSy...dX3Y
[2025-01-03T09:21:45.544Z] ‚úÖ API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω
[2025-01-03T09:21:45.544Z] üìù –ü–æ–ª—É—á–µ–Ω—ã —Ç–∏–ø—ã –∞–Ω–∞–ª–∏–∑–∞:
[2025-01-03T09:21:45.545Z] üîß –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Ä–æ–≥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: 70 (autoApply –≤–∫–ª—é—á–µ–Ω)
[2025-01-03T09:21:45.545Z] üìÇ –£–∫–∞–∑–∞–Ω –ø—É—Ç—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: ./tests
[2025-01-03T09:21:45.547Z] üìÅ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: 1
[2025-01-03T09:21:45.548Z] üìÑ –ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞ (1/1): tests/test-api.js
[2025-01-03T09:21:45.549Z] üìã –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã –∞–Ω–∞–ª–∏–∑–∞:
[2025-01-03T09:21:45.549Z] üîç –†–∞–∑–±–æ—Ä —Ç–∏–ø–∞ basic:
[2025-01-03T09:21:45.549Z] üîç –†–∞–∑–±–æ—Ä —Ç–∏–ø–∞ security:
[2025-01-03T09:21:45.550Z] üîç –†–∞–∑–±–æ—Ä —Ç–∏–ø–∞ performance:
[2025-01-03T09:21:45.550Z] üîç –†–∞–∑–±–æ—Ä —Ç–∏–ø–∞ syntax:
[2025-01-03T09:21:45.550Z] 
üîß –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞: tests/test-api.js
[2025-01-03T09:21:45.550Z]    –ü—Ä–∏–º–µ–Ω—è–µ–º prettier-vscode...
[2025-01-03T09:21:45.728Z]    ‚úÖ prettier-vscode completed
[2025-01-03T09:21:45.729Z]    –ü—Ä–∏–º–µ–Ω—è–µ–º eslint...
[2025-01-03T09:21:45.944Z]    ‚úÖ eslint completed
[2025-01-03T09:21:45.944Z] 
üìä –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–∞ --basic
[2025-01-03T09:21:45.945Z] üîß –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä—ã –¥–ª—è --basic...
[2025-01-03T09:21:45.945Z]    Running prettier-vscode...
[2025-01-03T09:21:46.114Z]    ‚úÖ prettier-vscode completed
[2025-01-03T09:21:46.115Z]    Running eslint...
[2025-01-03T09:21:46.326Z]    ‚úÖ eslint completed
[2025-01-03T09:21:54.191Z] –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:
          - Confidence: 80
          - Impact: 70
          - Priority: 75
          
[2025-01-03T09:21:54.191Z] 
[--basic] –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ confidence: 80, –ø–æ—Ä–æ–≥ fix: 70
[2025-01-03T09:21:54.192Z] 
[--basic] autoApply: true, confidence: 80, fix: 70
[2025-01-03T09:21:54.192Z] üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ç–∏–ø–∞: --basic
[2025-01-03T09:21:54.192Z] 
[--basic] –ù–∞—á–∞–ª–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...
[2025-01-03T09:21:54.192Z] üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞: AIzaSy...dX3Y
[2025-01-03T09:21:55.088Z] ‚úÖ API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω
[2025-01-03T09:21:55.088Z] –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç—Ä–∏–∫:
            - Confidence: 80
            - Impact: 70
            - Priority: 75
            - –ü–æ—Ä–æ–≥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: 70
            - AutoApply: true
            
[2025-01-03T09:22:01.003Z] ‚úÖ –ü—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è
[2025-01-03T09:22:01.003Z] [--basic] –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã (—Ñ–∏–∫—Å >= –ø–æ—Ä–æ–≥–∞).
[2025-01-03T09:22:01.004Z] 
üìä –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–∞ --security
[2025-01-03T09:22:05.013Z] –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:
          - Confidence: 90
          - Impact: 80
          - Priority: 85
          
[2025-01-03T09:22:05.013Z] 
[--security] –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ confidence: 90, –ø–æ—Ä–æ–≥ fix: 70
[2025-01-03T09:22:05.013Z] 
[--security] autoApply: true, confidence: 90, fix: 70
[2025-01-03T09:22:05.013Z] üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ç–∏–ø–∞: --security
[2025-01-03T09:22:05.013Z] 
[--security] –ù–∞—á–∞–ª–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...
[2025-01-03T09:22:05.014Z] üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞: AIzaSy...dX3Y
[2025-01-03T09:22:05.814Z] ‚úÖ API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω
[2025-01-03T09:22:05.815Z] –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç—Ä–∏–∫:
            - Confidence: 90
            - Impact: 80
            - Priority: 85
            - –ü–æ—Ä–æ–≥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: 70
            - AutoApply: true
            
[2025-01-03T09:22:11.930Z] ‚úÖ –ü—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è
[2025-01-03T09:22:11.931Z] [--security] –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã (—Ñ–∏–∫—Å >= –ø–æ—Ä–æ–≥–∞).
[2025-01-03T09:22:11.931Z] 
üìä –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–∞ --performance
[2025-01-03T09:22:21.571Z] –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:
          - Confidence: 85
          - Impact: 75
          - Priority: 80
          
[2025-01-03T09:22:21.572Z] 
[--performance] –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ confidence: 85, –ø–æ—Ä–æ–≥ fix: 70
[2025-01-03T09:22:21.572Z] 
[--performance] autoApply: true, confidence: 85, fix: 70
[2025-01-03T09:22:21.572Z] üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ç–∏–ø–∞: --performance
[2025-01-03T09:22:21.572Z] 
[--performance] –ù–∞—á–∞–ª–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...
[2025-01-03T09:22:21.572Z] üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞: AIzaSy...dX3Y
[2025-01-03T09:22:22.377Z] ‚úÖ API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω
[2025-01-03T09:22:22.377Z] –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç—Ä–∏–∫:
            - Confidence: 85
            - Impact: 75
            - Priority: 80
            - –ü–æ—Ä–æ–≥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: 70
            - AutoApply: true
            
[2025-01-03T09:22:28.512Z] ‚úÖ –ü—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è
[2025-01-03T09:22:28.512Z] [--performance] –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã (—Ñ–∏–∫—Å >= –ø–æ—Ä–æ–≥–∞).
[2025-01-03T09:22:28.513Z] 
üìä –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–∞ --syntax
[2025-01-03T09:22:28.513Z] üîß –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä—ã –¥–ª—è --syntax...
[2025-01-03T09:22:28.513Z]    Running eslint...
[2025-01-03T09:22:28.730Z]    ‚úÖ eslint completed
[2025-01-03T09:22:38.684Z] –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:
          - Confidence: 95
          - Impact: 60
          - Priority: 70
          
[2025-01-03T09:22:38.684Z] 
[--syntax] –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ confidence: 95, –ø–æ—Ä–æ–≥ fix: 70
[2025-01-03T09:22:38.684Z] 
[--syntax] autoApply: true, confidence: 95, fix: 70
[2025-01-03T09:22:38.685Z] üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ç–∏–ø–∞: --syntax
[2025-01-03T09:22:38.685Z] 
[--syntax] –ù–∞—á–∞–ª–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...
[2025-01-03T09:22:38.685Z] üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞: AIzaSy...dX3Y
[2025-01-03T09:22:39.494Z] ‚úÖ API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω
[2025-01-03T09:22:39.494Z] –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç—Ä–∏–∫:
            - Confidence: 95
            - Impact: 60
            - Priority: 70
            - –ü–æ—Ä–æ–≥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: 70
            - AutoApply: true
            
[2025-01-03T09:22:43.431Z] ‚úÖ –ü—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è
[2025-01-03T09:22:43.431Z] [--syntax] –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã (—Ñ–∏–∫—Å >= –ø–æ—Ä–æ–≥–∞).
[2025-01-03T09:22:43.432Z] 
üìä –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç –ø–æ —Ñ–∞–π–ª—É:
[2025-01-03T09:22:43.432Z] [
  {
    "type": "--basic",
    "analysis": "```json\n{\n  \"codeQualityScore\": 80,\n  \"specificIssuesFound\": [\n    {\n      \"issue\": \"The `console.log` statements are not prefixed with the `console.log` method.\",\n      \"fix\": \"Prefix the `console.log` statements with the `console.log` method, e.g.:\\n```\\nconsole.log(\\\"–ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞:\\\", config.apiKey ? \\\"***\\\" + \\\"*****\\\".slice(-5) : \\\"–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\\\");\\n```\"\n    },\n    {\n      \"issue\": \"The `try` block does not have a corresponding `catch` block.\",\n      \"fix\": \"Add a `catch` block to the `try` block to handle errors, e.g.:\\n```\\ntry {\\n  // code to be executed\\n} catch (error) {\\n  // code to handle errors\\n}\\n```\"\n    },\n    {\n      \"issue\": \"The `result` variable is not used after it is declared.\",\n      \"fix\": \"Remove the `result` variable declaration, or use it in the code, e.g.:\\n```\\nconst result = await model.generateContent(\\\"—Ç–µ—Å—Ç\\\");\\nconst response = await result.response;\\n```\"\n    }\n  ],\n  \"concreteImprovementSuggestions\": [\n    {\n      \"suggestion\": \"Use the `console.log` method to prefix the `console.log` statements.\",\n      \"example\": \"```\\nconsole.log(\\\"–ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞:\\\", config.apiKey ? \\\"***\\\" + \\\"*****\\\".slice(-5) : \\\"–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\\\");\\n```\"\n    },\n    {\n      \"suggestion\": \"Add a `catch` block to the `try` block to handle errors.\",\n      \"example\": \"```\\ntry {\\n  // code to be executed\\n} catch (error) {\\n  // code to handle errors\\n}\\n```\"\n    },\n    {\n      \"suggestion\": \"Remove the `result` variable declaration, or use it in the code.\",\n      \"example\": \"```\\nconst result = await model.generateContent(\\\"—Ç–µ—Å—Ç\\\");\\nconst response = await result.response;\\n```\"\n    }\n  ]\n}\n```",
    "confidence": 80,
    "impact": 70,
    "priority": 75,
    "appliedFixes": [],
    "specificChecks": {},
    "formattingApplied": true,
    "fixesApplied": 0
  },
  {
    "type": "--security",
    "analysis": "```json\n{\n  \"codeQualityScore\": 70,\n  \"specificIssuesFound\": [\n    {\n      \"issue\": \"The API key is stored in plain text in the configuration file.\",\n      \"severity\": \"High\",\n      \"description\": \"Storing the API key in plain text makes it vulnerable to unauthorized access and theft. An attacker could potentially access the configuration file and use the API key to make unauthorized requests to the API.\"\n    }\n  ],\n  \"concreteImprovementSuggestions\": [\n    {\n      \"suggestion\": \"Store the API key in a secure environment variable.\",\n      \"description\": \"Environment variables are a more secure way to store sensitive information than plain text configuration files. They are not stored in the codebase and are only accessible to the running application.\"\n    }\n  ],\n  \"codeExamplesForFixes\": [\n    {\n      \"before\": \"const config = require('../src/config/gemini.config');\",\n      \"after\": \"const config = require('../src/config/gemini.config');\\nconst apiKey = process.env.GEMINI_API_KEY;\"\n    }\n  ]\n}\n```",
    "confidence": 90,
    "impact": 80,
    "priority": 85,
    "appliedFixes": [],
    "specificChecks": {
      "sqlInjection": [],
      "xss": [],
      "unsafeEval": []
    },
    "formattingApplied": true,
    "fixesApplied": 0
  },
  {
    "type": "--performance",
    "analysis": "```json\n{\n  \"codeQualityScore\": 70,\n  \"specificIssuesFound\": [\n    {\n      \"issue\": \"The code is not using async/await syntax for all asynchronous operations, which can lead to performance issues and make the code harder to read and maintain.\",\n      \"example\": \"The following code uses callbacks for asynchronous operations, which can be replaced with async/await syntax:\"\n    }\n  ],\n  \"concreteImprovementSuggestions\": [\n    {\n      \"suggestion\": \"Use async/await syntax for all asynchronous operations.\",\n      \"example\": \"The following code uses async/await syntax for asynchronous operations:\"\n    }\n  ],\n  \"codeExamplesForFixes\": [\n    {\n      \"before\": \"```javascript\\nconst { GoogleGenerativeAI } = require('@google/generative-ai');\\nconst config = require('../src/config/gemini.config');\\n\\nasync function testGeminiAPI() {\\ntry {\\n    config.validate();\\n\\n    console.log(\\n      '–ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞:',\\n      config.apiKey ? '***' + '*****'.slice(-5) : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',\\n    );\\n\\n    const genAI = new GoogleGenerativeAI(config.apiKey);\\n    const model = genAI.getGenerativeModel({ model: config.modelName });\\n\\n    const result = await model.generateContent('—Ç–µ—Å—Ç');\\n    const response = await result.response;\\n\\n    console.log('–û—Ç–≤–µ—Ç API –ø–æ–ª—É—á–µ–Ω:', response ? '—É—Å–ø–µ—à–Ω–æ' : '–æ—à–∏–±–∫–∞');\\n    return true;\\n  } catch (error) {\\n    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:', error.message);\\n    if (config.debug) {\\n      console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error);\\n    }\\n    return false;\\n  }\\n}\\n\\nmodule.exports = { testGeminiAPI };\\n```\",\n      \"after\": \"```javascript\\nconst { GoogleGenerativeAI } = require('@google/generative-ai');\\nconst config = require('../src/config/gemini.config');\\n\\nasync function testGeminiAPI() {\\ntry {\\n    config.validate();\\n\\n    console.log(\\n      '–ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞:',\\n      config.apiKey ? '***' + '*****'.slice(-5) : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',\\n    );\\n\\n    const genAI = new GoogleGenerativeAI(config.apiKey);\\n    const model = genAI.getGenerativeModel({ model: config.modelName });\\n\\n    const result = await model.generateContent('—Ç–µ—Å—Ç');\\n    const response = await result.response;\\n\\n    console.log('–û—Ç–≤–µ—Ç API –ø–æ–ª—É—á–µ–Ω:', response ? '—É—Å–ø–µ—à–Ω–æ' : '–æ—à–∏–±–∫–∞');\\n    return true;\\n  } catch (error) {\\n    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:', error.message);\\n    if (config.debug) {\\n      console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error);\\n    }\\n    return false;\\n  }\\n}\\n\\nmodule.exports = { testGeminiAPI };\\n```\"\n    }\n  ]\n}\n```",
    "confidence": 85,
    "impact": 75,
    "priority": 80,
    "appliedFixes": [],
    "specificChecks": {
      "complexity": [
        "–ù–∞–π–¥–µ–Ω–æ 1 —Ñ—É–Ω–∫—Ü–∏–π."
      ],
      "memoryUsage": []
    },
    "formattingApplied": true,
    "fixesApplied": 0
  },
  {
    "type": "--syntax",
    "analysis": "```json\n{\n  \"codeQualityScore\": 80,\n  \"specificIssuesFound\": [\n    {\n      \"issue\": \"The code does not follow the best practices of JavaScript code styling.\",\n      \"example\": \"The code should be formatted using a consistent style guide, such as Airbnb or Standard.\",\n      \"fix\": \"Use a linter and formatter to ensure consistent code styling.\"\n    },\n    {\n      \"issue\": \"The code does not handle errors gracefully.\",\n      \"example\": \"The code does not catch and handle errors that may occur during the API call.\",\n      \"fix\": \"Wrap the API call in a try-catch block and handle errors appropriately.\"\n    },\n    {\n      \"issue\": \"The code does not validate the API key before making the API call.\",\n      \"example\": \"The code does not check if the API key is valid before making the API call.\",\n      \"fix\": \"Add a check to validate the API key before making the API call.\"\n    }\n  ],\n  \"concreteImprovementSuggestions\": [\n    {\n      \"suggestion\": \"Use a linter and formatter to ensure consistent code styling.\",\n      \"example\": \"Use a linter such as ESLint and a formatter such as Prettier to ensure consistent code styling.\"\n    },\n    {\n      \"suggestion\": \"Wrap the API call in a try-catch block and handle errors appropriately.\",\n      \"example\": \"Wrap the API call in a try-catch block and log the error message if an error occurs.\"\n    },\n    {\n      \"suggestion\": \"Add a check to validate the API key before making the API call.\",\n      \"example\": \"Add a check to validate the API key before making the API call.\"\n    }\n  ],\n  \"codeExamplesForFixes\": [\n    {\n      \"fix\": \"Use a linter and formatter to ensure consistent code styling.\",\n      \"example\": \"```javascript\\n// Install ESLint and Prettier\\nnpm install eslint prettier --save-dev\\n\\n// Create a .eslintrc file\\n{\\n  \\\"extends\\\": \\\"airbnb\\\"\\n}\\n\\n// Create a .prettierrc file\\n{\\n  \\\"semi\\\": true,\\n  \\\"trailingComma\\\": \\\"all\\\"\\n}\\n\\n// Run ESLint and Prettier\\nnpm run lint\\n```\"\n    },\n    {\n      \"fix\": \"Wrap the API call in a try-catch block and handle errors appropriately.\",\n      \"example\": \"```javascript\\ntry {\\n  const result = await model.generateContent(\\\"test\\\");\\n  const response = await result.response;\\n\\n  console.log(\\\"–û—Ç–≤–µ—Ç API –ø–æ–ª—É—á–µ–Ω:\\\", response ? \\\"—É—Å–ø–µ—à–Ω–æ\\\" : \\\"–æ—à–∏–±–∫–∞\\\");\\n  return true;\\n} catch (error) {\\n  console.error(\\\"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:\\\", error.message);\\n  if (config.debug) {\\n    console.error(\\\"–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:\\\", error);\\n  }\\n  return false;\\n}\\n```\"\n    },\n    {\n      \"fix\": \"Add a check to validate the API key before making the API call.\",\n      \"example\": \"```javascript\\nif (!config.apiKey) {\\n  throw new Error(\\\"API key is missing\\\");\\n}\\n```\"\n    }\n  ]\n}\n```",
    "confidence": 95,
    "impact": 60,
    "priority": 70,
    "appliedFixes": [],
    "specificChecks": {
      "syntax": [],
      "style": [
        {
          "type": "style",
          "message": "Trailing whitespace found"
        },
        {
          "type": "style",
          "message": "Missing newline at end of file"
        },
        {
          "type": "style",
          "message": "Trailing comma style violation"
        }
      ]
    },
    "formattingApplied": true,
    "fixesApplied": 0
  }
]
[2025-01-03T09:22:43.432Z] üîé –ó–∞–≤–µ—Ä—à—ë–Ω –∞–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞:
[2025-01-03T09:22:43.432Z] 
‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω
